var e,t;e=window,t=function(){return function(e){var t={};function s(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,s),n.l=!0,n.exports}return s.m=e,s.c=t,s.d=function(e,t,a){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(s.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)s.d(a,n,function(t){return e[t]}.bind(null,n));return a},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);class a{}class n extends a{}class i extends a{}class r{constructor(e,t,s){this.commandType=e,this.clientID=t,this.teamID=s}}class l{constructor(e,t){this._isObserver=!1,this.clientID=e,this.teamID=t}get isObserver(){return this._isObserver}set isObserver(e){this._isObserver=e}}class o extends l{constructor(e,t,s){super(e,t),this._commandsBuffer=[],this._local=s,s.clientID=e,s.onCommandRecieved.push(this.recieveCommand.bind(this))}createScenario(e,t){}sendDataUpdate(e){}grabCommands(e,t){let s=this._commandsBuffer;for(let e=0;e<s.length;e++)s[e].clientID=this.clientID,s[e].teamID=this.teamID;return this._commandsBuffer=[],s}recieveCommand(e){e.clientID=this.clientID,e.teamID=this.teamID,this._commandsBuffer.push(e)}}class h extends l{constructor(e,t,s){super(e,t),this._ai=s}createScenario(e,t){this._data=e,this._ai.create(this.clientID,this.teamID,t,e)}sendDataUpdate(e){this._data=e}grabCommands(e,t){return e.setClient(this.clientID),e.setTeam(this.teamID),this._ai.update(this._data,e,t)}}class c{loadScenario(e){this.scenario=e,this.scenario.ready&&this.scenario.create()}}class d extends c{constructor(){super(...arguments),this._ticks=0,this._maxTicks=1e3,this._delta=1/60}run(){if(!this.scenario.ready)throw new Error("Cannot run server as scenario is not ready");for(this.scenario.created||this.scenario.create(),console.log("Running scenario:"),console.log("for",this._maxTicks,"updates"),console.log("with a",this._delta,"s timestep");!this.scenario.ended&&this._ticks<this._maxTicks;)this.scenario.update(this._delta),this._ticks++;return console.log("Simulation completed after",this._ticks,"updates (",this._maxTicks*this._delta,"seconds simulated)"),console.log("Game over state was "+(this.scenario.ended?"":"not ")+"found"),!0}}class m{constructor(e,t,s){this._created=!1,this._gameModel=e,this._data=t,this._clients=s}get ended(){return this._ended}get ready(){return 0===this._clients.remainingSlots}get created(){return this._created}get clients(){return this._clients}get gameModel(){return this._gameModel}get data(){return this._data}create(){this.clients.createScenario(this._data,this._gameModel),this._created=!0}load(e){this._data.load(e)}getSaveData(){return this._data.save()}addClient(e){return this._clients.addClient(e)}addAITeam(e){this._clients.addClient(new h(this._clients.nextClient,this._clients.nextTeam,e))}addLocalClient(e){return e.commandFactory=this.clients.commandFactory,this._clients.addClient(new o(this._clients.nextClient,this._clients.nextTeam,e))}runHeadless(){let e=new d;return e.loadScenario(this),!!e.run()}}class u extends m{update(){this.ended||(this.gameModel.applyCommands(this.data,this.clients.getCommandsOfClient(this.data.getCurrentPlayer(),1)),this.gameModel.goalTest(this.data)&&(this._ended=!0),this.data.moveToNextPlayer(),this.clients.sendDataUpdate(this.data))}}class g extends m{update(e){if(!this.ended){let t=this.clients.getCommands(e);this.gameModel.applyCommands(this.data,t,e),this.gameModel.goalTest(this.data)&&(this._ended=!0),this.clients.sendDataUpdate(this.data)}}}class f{constructor(e,t){this._clients=[],this._clientsCount=0,this._clients=new Array(e),this._commandFactory=t}get clientsCount(){return this._clientsCount}get maxClients(){return this._clients.length}get remainingSlots(){return this._clients.length-this._clientsCount}get nextClient(){let e=0;for(let t=0;t<this._clients.length;t++)this._clients[t]&&this._clients[t].clientID===e&&e++;return e}get nextTeam(){let e=0;for(let t=0;t<this._clients.length;t++)this._clients[t]&&this._clients[t].teamID===e&&e++;return e}get commandFactory(){return this._commandFactory}addClient(e){for(let t=0;t<this._clientsCount;t++)if(this._clients[t].clientID===e.clientID)return!1;return this._clientsCount!==this._clients.length&&(this._clients[this._clientsCount]=e,this._clientsCount++,!!e||void 0)}setObserver(e,t){this._clients[e].isObserver=t}createScenario(e,t){for(let s=0,a=this._clientsCount;s<a;s++)this._clients[s].createScenario(e,t)}sendDataUpdate(e,t){for(let t=0,s=this._clientsCount;t<s;t++)this._clients[t].sendDataUpdate(e)}getCommands(e){let t=[];for(let s=0,a=this._clientsCount;s<a;s++)this._clients[s].isObserver||(t=t.concat(this._clients[s].grabCommands(this._commandFactory,e)));return this.commandFactory.resetCommandPool(),t}getCommandsOfClient(e,t){if(!this._clients[e].isObserver)return this._clients[e].grabCommands(this._commandFactory,t)}}var p,_,y,v,b;!function(e){e[e.Wolf=0]="Wolf",e[e.Sheep=1]="Sheep",e[e.Cabbage=2]="Cabbage"}(p||(p={})),function(e){e[e.MoveWolf=0]="MoveWolf",e[e.MoveCabbage=1]="MoveCabbage",e[e.MoveSheep=2]="MoveSheep",e[e.MoveFarmer=3]="MoveFarmer"}(_||(_={}));class M{load(e){this.leftBank=e.leftBank.slice(),this.rightBank=e.rightBank.slice(),this.farmerOnLeftBank=e.farmerOnLeftBank}cloneFrom(e){this.leftBank=e.leftBank.slice(),this.rightBank=e.rightBank.slice(),this.farmerOnLeftBank=e.farmerOnLeftBank}clients(){return 1}save(){return{leftBank:this.leftBank,rightBank:this.rightBank,farmerOnLeftBank:this.farmerOnLeftBank}}equals(e){if(this.leftBank.length!==e.leftBank.length)return!1;if(this.farmerOnLeftBank!==e.farmerOnLeftBank)return!1;for(let t=0,s=this.leftBank.length;t<s;t++){let s=!1;for(let a=0,n=e.leftBank.length;a<n;a++)if(this.leftBank[t]===e.leftBank[a]){s=!0;break}if(!s)return!1}return!0}getCurrentPlayer(){return 0}moveToNextPlayer(){}}class k extends n{stateActionMapping(e){if(this._checkIfFailureState(e))return[];let t=e.farmerOnLeftBank?e.leftBank:e.rightBank,s=new Array(t.length+1);s[s.length-1]=_.MoveFarmer;for(let e=0,a=t.length;e<a;e++)t[e]===p.Cabbage?s[e]=_.MoveCabbage:t[e]===p.Sheep?s[e]=_.MoveSheep:t[e]===p.Wolf&&(s[e]=_.MoveWolf);return s}applyCommands(e,t){if(!t)throw new Error("Command submitted was null");if(t instanceof Array)throw new Error("Must submit a single command as an action (not an array)");if(t.commandType===_.MoveFarmer)e.leftBank=e.leftBank,e.rightBank=e.rightBank,e.farmerOnLeftBank=!e.farmerOnLeftBank;else{let s;t.commandType===_.MoveCabbage?s=p.Cabbage:t.commandType===_.MoveSheep?s=p.Sheep:t.commandType===_.MoveWolf&&(s=p.Wolf);let a=[],n=[];for(let t=0,n=e.leftBank.length;t<n;t++)e.leftBank[t]!==s&&a.push(e.leftBank[t]);for(let t=0,a=e.rightBank.length;t<a;t++)e.rightBank[t]!==s&&n.push(e.rightBank[t]);e.farmerOnLeftBank?n.push(s):a.push(s),e.leftBank=a,e.rightBank=n,e.farmerOnLeftBank=!e.farmerOnLeftBank}}goalTest(e){return!!this._checkIfFailureState(e)||0===e.leftBank.length}heuristic(e){return 1e3*e.leftBank.length}_checkIfFailureState(e){if(e.farmerOnLeftBank){if(-1!==e.rightBank.indexOf(p.Wolf)&&-1!==e.rightBank.indexOf(p.Sheep)||-1!==e.rightBank.indexOf(p.Cabbage)&&-1!==e.rightBank.indexOf(p.Sheep))return!0}else if(-1!==e.leftBank.indexOf(p.Wolf)&&-1!==e.leftBank.indexOf(p.Sheep)||-1!==e.leftBank.indexOf(p.Cabbage)&&-1!==e.leftBank.indexOf(p.Sheep))return!0;return!1}}class C{setClient(e){}setTeam(e){}getCommandList(){return[_.MoveCabbage,_.MoveFarmer,_.MoveWolf,_.MoveSheep]}getCommand(e){return new r(e,0,0)}resetCommandPool(){}}class x extends u{constructor(){let e=new M;e.load({leftBank:[p.Sheep,p.Wolf,p.Cabbage],rightBank:[],farmerOnLeftBank:!0}),super(new k,e,new f(1,new C))}}!function(e){e[e.AgentMoveNorth=0]="AgentMoveNorth",e[e.AgentMoveSouth=1]="AgentMoveSouth",e[e.AgentMoveEast=2]="AgentMoveEast",e[e.AgentMoveWest=3]="AgentMoveWest",e[e.SpawnProjectile=4]="SpawnProjectile"}(y||(y={}));class w extends i{constructor(e,t,s){super(),this._allActions=[],this._agentModel=e,this._projectileModel=t,this._commandModel=s;for(let e in y)isNaN(Number(e))||this._allActions.push(parseInt(e))}stateActionMapping(e){return this._allActions}applyCommands(e,t,s){this._commandModel.applyCommands(e,t,s),this._doStateUpdate(e,s)}_doStateUpdate(e,t){for(let t=0;t<e.teams.length;t++)0===e.teams[t].currentAgents&&(e.teams[t].isPlaying=!1);this._agentModel.updateAgents(e,t),this._projectileModel.stateUpdate(e,t),e.sortDrawables()}goalTest(e){for(let t=0;t<e.teams.length;t++)e.teams[t].currentAgents;return!1}}!function(e){e[e.Agent=0]="Agent",e[e.Projectile=1]="Projectile"}(v||(v={}));class A{constructor(){this.inUse=!1,this.y=1/0,this.z=1/0}getX(){return this.x}getY(){return this.y}getZ(){return this.z}isInUse(){return this.inUse}getType(){return v.Agent}getWidth(){return this.collideRadius}getHeight(){return this.collideRadius}load(e,t){this.team=t,this.inUse=!0,this.x=e.x,this.y=e.y,this.z=e.z,this.velocityX=0,this.velocityY=0,this.speed=e.speed,this.health=e.health,this.maxHealth=e.maxHealth,this.collideRadius=e.collideRadius}}class B{load(e,t){this.agents=new Array(e.agents.length),e.agents.forEach((e,s)=>{let a=new A;a.load(e,t),this.agents[s]=a}),this.currentAgents=this.agents.length,this.isPlaying=this.agents.length>0,this.movesMade=0,this.agents.length=e.maxAgents;for(let t=this.currentAgents;t<e.maxAgents;t++)this.agents[t]=new A;this.maxAgents=e.maxAgents}}class S{constructor(){this.x=0,this.y=1/0,this.z=1/0,this.velocityX=0,this.velocityY=0,this.damage=0,this.team=0,this.timeToLive=0,this.inUse=!1,this.collideRadius=0}getX(){return this.x}getY(){return this.y}getZ(){return this.z}isInUse(){return this.inUse}getType(){return v.Projectile}getWidth(){return this.collideRadius}getHeight(){return this.collideRadius}}class D{player(){return this.teams[this.teams.length-1].agents[0]}cloneFrom(e){}clients(){return this.teams.length}load(e){if(this.maxProjectiles=e.maxProjectiles,!e.map){e.map=new Array(1),e.map[0]=new Array(20);for(let t=0;t<e.map[0].length;t++){e.map[0][t]=new Array(20);for(let s=0;s<e.map[0][t].length;s++)e.map[0][t][s]=0}}this.teams=[];let t=0;for(let s=0;s<e.teams.length;s++){let a=new B;a.load(e.teams[s],s),this.teams.push(a),t+=this.teams[s].maxAgents}this.projectiles=new Array(this.maxProjectiles);for(let e=0;e<this.projectiles.length;e++)this.projectiles[e]=new S;this.projectilesLength=0;let s=0;this.drawables=new Array(t+this.maxProjectiles);for(let e=0,t=this.teams.length;e<t;e++)for(let t=0,a=this.teams[e].agents.length;t<a;t++)this.drawables[s]=this.teams[e].agents[t],s++;for(let e=0;e<this.projectiles.length;e++)this.drawables[s]=this.projectiles[e],s++;this.map=new Array(e.map.length);for(let t=0,s=e.map.length;t<s;t++){this.map[t]=new Array(e.map[t][0].length);for(let s=0,a=e.map[t][0].length;s<a;s++){this.map[t][s]=new Array(e.map[t].length);for(let a=0,n=e.map[t].length;a<n;a++)this.map[t][s][a]=e.map[t][a][s]}}this.sortDrawables()}save(){let e=new Array(this.teams.length);for(let t=0,s=this.teams.length;t<s;t++)e[t]=this.teams[t];let t=new Array(this.map.length);for(let e=0,s=this.map.length;e<s;e++){t[e]=new Array(this.map[e].length);for(let s=0,a=this.map.length;s<a;s++)t[e][s]=this.map[e][s]}return{maxProjectiles:this.maxProjectiles,teams:e,map:t}}sortDrawables(){let e=this.drawables;for(let t=1;t<e.length;t++)for(let s=t;s>0&&e[s].getZ()<e[s-1].getZ();s--){let t=e[s];e[s]=e[s-1],e[s-1]=t}}}class j extends r{constructor(e,t,s,a){super(e,t,s),this.agentID=a}}class I{constructor(e){this._commandsPool=[],this._usedCommands=0,this._allActions=[];for(let e in y)isNaN(Number(e))||this._allActions.push[e];this._scenarioData=e}resetCommandPool(){this._usedCommands=0}setClient(e){this._currentClient=e}setTeam(e){this._currentTeam=e}getCommand(e,t,s){t=t||0,s=s||this._currentTeam,this._scenarioData.teams[s].agents[t].inUse||console.warn("Getting command for agent which is not in use"),this._usedCommands===this._commandsPool.length&&this._commandsPool.push(new j(e,this._currentClient,s,t));let a=this._commandsPool[this._usedCommands];if(a.agentID=t,a.teamID=s,a.clientID=this._currentClient,a.commandType=e,this._usedCommands++,e===y.SpawnProjectile){if(this._scenarioData.projectilesLength>=this._scenarioData.projectiles.length-1)return null;let e=this._scenarioData.projectiles[this._scenarioData.projectilesLength];this._scenarioData.projectilesLength++,e.x=this._scenarioData.teams[s].agents[t].x,e.y=this._scenarioData.teams[s].agents[t].y,e.z=this._scenarioData.teams[s].agents[t].z,e.team=s,e.timeToLive=5,e.collideRadius=.1,e.damage=1,a.arg=e}return a}getCommandList(){return this._allActions}}!function(e){e[e.Floor=0]="Floor",e[e.Void=1]="Void",e[e.Water=2]="Water",e[e.Wall=3]="Wall",e[e.StepsDown=4]="StepsDown"}(b||(b={}));class T{constructor(){this._floorWalkable=[!0,!1,!0,!1,!0]}isWalkable(e){return this._floorWalkable[e]}updateAgents(e,t){for(let s=0,a=e.drawables.length;s<a&&e.drawables[s].isInUse();s++)e.drawables[s].getType()===v.Agent&&this._updateAgent(t,e.drawables[s],e)}_updateAgent(e,t,s){let a=!1,n=!1,i=1,r=s.map[Math.round(t.z)][Math.floor(t.x)][Math.floor(t.y)];r!==b.Water&&r!==b.StepsDown||(i=1),t.z+1<s.map.length-1&&s.map[Math.round(t.z+1)][Math.floor(t.x)][Math.floor(t.y)]===b.StepsDown&&(i=1),r===b.Water&&(i=.2);let l=t.x+t.velocityX*e*i;(l+t.collideRadius>=s.map[Math.round(t.z)].length||l-t.collideRadius<0)&&(a=!0);let o=t.y+t.velocityY*e*i;(o+t.collideRadius>=s.map[Math.round(t.z)][0].length||o-t.collideRadius<0)&&(n=!0),a||(t.velocityX>0?this.isWalkable(s.map[Math.round(t.z)][Math.floor(l+t.collideRadius)][Math.floor(o)])||(a=!0):t.velocityX<0&&(this.isWalkable(s.map[Math.round(t.z)][Math.floor(l-t.collideRadius)][Math.floor(o)])||(a=!0))),n||(t.velocityY>0?this.isWalkable(s.map[Math.round(t.z)][Math.floor(l)][Math.floor(o+t.collideRadius)])||(n=!0):t.velocityY<0&&(this.isWalkable(s.map[Math.round(t.z)][Math.floor(l)][Math.floor(o-t.collideRadius)])||(n=!0)));let h=!1,c=0;if(s.map[Math.round(t.z)][Math.floor(l)][Math.floor(o)]===b.StepsDown&&(h=!0,c=Math.round(t.z)-1),Math.round(t.z)<s.map.length-1&&s.map[Math.round(t.z)+1][Math.floor(l)][Math.floor(o)]===b.StepsDown&&(h=!0,c=Math.round(t.z)),h){let e=Math.max(0,1-t.y%1*2);Math.abs(c+e-t.z)<.5&&(t.z=c+e),n=!1}else t.z=Math.round(t.z);a||(t.x=l),n||(t.y=o),t.velocityX=0,t.velocityY=0}}class O{stateUpdate(e,t){let s;for(let a=0,n=e.projectilesLength;a<n;a++){let n=e.projectiles[a];n.x+=t*n.velocityX,n.y+=t*n.velocityY;let i=this._updateTimeToLive(n,t);if(i=i||this._checkWallCollision(e,n,t),i=i||this._checkAgentCollision(e,t,n),i){s?s.push(a):s=[a];break}}if(s){s=s.sort(this._sortNumber);for(let t=0;t<s.length;t++)this._removeProjectile(e,s[t])}}_checkWallCollision(e,t,s){return t.x<0||t.x>e.map[t.z].length||t.y<0||t.y>e.map[t.z][0].length||e.map[t.z][Math.floor(t.x)][Math.floor(t.y)]===b.Wall}_updateTimeToLive(e,t){return e.timeToLive-=t,e.timeToLive<=0}_checkAgentCollision(e,t,s){for(let t=0,a=e.drawables.length;t<a;t++){let a=e.drawables[t];if(a.getType()!==v.Agent)continue;let n=a;if(!1!==n.isInUse()&&s.team!==n.team&&(n.x-s.x)*(n.x-s.x)+(n.y-s.y)*(n.y-s.y)+(n.z-s.z)*(n.z-s.z)<(n.collideRadius+s.collideRadius)*(n.collideRadius+s.collideRadius)&&this._agentCollision(e,n,s))return!0}return!1}_agentCollision(e,t,s){return t.health-=s.damage,t.health=Math.max(0,t.health),0===t.health&&(t.y=1/0,t.z=1/0,t.inUse=!1,e.teams[t.team].currentAgents--),!0}_sortNumber(e,t){return t-e}_removeProjectile(e,t){e.projectiles[t].inUse=!1,e.projectiles[t].y=1/0,e.projectiles[t].z=1/0;let s=e.projectiles[t];e.projectilesLength--,e.projectiles[t]=e.projectiles[e.projectilesLength],e.projectiles[e.projectilesLength]=s}}class L{applyCommands(e,t,s){for(let a=0,n=t.length;a<n;a++)if(t[a]){e.teams[t[a].teamID].movesMade++;let n=e.teams[t[a].teamID].agents[t[a].agentID];if(!n)throw new Error("Command returned for agent that does not exist. Team "+t[a].teamID+", agent: "+t[a].agentID);n.inUse&&this._agentActions(t[a],t[a].teamID,t[a].agentID,s,n,e)}}_agentActions(e,t,s,a,n,i){if(e.commandType===y.AgentMoveNorth)n.velocityY=Math.max(n.velocityY-n.speed,-n.speed);else if(e.commandType===y.AgentMoveSouth)n.velocityY=Math.min(n.velocityY+n.speed,n.speed);else if(e.commandType===y.AgentMoveEast)n.velocityX=Math.min(n.velocityX+n.speed,n.speed);else if(e.commandType===y.AgentMoveWest)n.velocityX=Math.max(n.velocityX-n.speed,-n.speed);else if(e.commandType===y.SpawnProjectile)if(e.arg instanceof S)e.arg.inUse=!0;else if(i.projectilesLength<i.projectiles.length-1){let e=5*Math.random()-2.5,s=5*Math.random()-2.5,a=i.projectiles[i.projectilesLength];i.projectilesLength++,a.x=n.x,a.y=n.y,a.z=n.z,a.velocityX=n.velocityX+e,a.velocityY=n.velocityY+s,a.damage=1,a.team=t,a.timeToLive=5,a.collideRadius=.1,a.inUse=!0}}}class z extends g{constructor(e){let t=new D;t.load(e);let s=new f(t.clients(),new I(t));super(new w(new T,new O,new L),t,s)}create(){super.create(),console.log("Created Fuseblade scenario with:"),console.log("a map of",this.data.map.length,"by",this.data.map[0].length,"by",this.data.map[0][0].length),console.log(this.data.clients(),"clients"),console.log(this.data.teams.length,"teams")}update(e){for(let e=0;e<this.data.teams.length;e++)this.data.teams[e].isPlaying||this.clients.setObserver(e,!0);super.update(e)}}class P extends c{run(){return!!this.scenario.ready&&(this.scenario.created||this.scenario.create(),!0)}update(e){this.scenario.update(e)}connectLocalClient(e){return this.scenario.addClient(e)}}class W{constructor(e,t){this.key=e,this.value=t}}class F{constructor(){this.entries=[]}get length(){return this.entries.length}push(e,t){this.entries.push(new W(e,t))}delete(e,t){let s=[];this.entries.forEach(a=>{a.key!==e?s.push(a):t&&a.value!==t&&s.push(a)}),this.entries=s}deleteValue(e){let t=[];this.entries.forEach(s=>{s.value!==e&&t.push(s)}),this.entries=t}clear(){this.entries=[]}forEach(e){this.entries.forEach(e)}}class R{constructor(){this._callbacks=new F}call(...e){for(let t=0,s=this._callbacks.entries.length;t<s;t++)this._callbacks.entries[t].value(...e)}push(e,t){return this._callbacks.push(t,e),this}unregister(e){this._callbacks.delete(e)}remove(e){this._callbacks.deleteValue(e)}removeAll(){this._callbacks.clear()}get length(){return this._callbacks.length}clone(){let e=new(0,Object.getPrototypeOf(this).constructor);for(let t=0,s=this._callbacks.entries.length;t<s;t++)e.push(this._callbacks.entries[t].value,this._callbacks.entries[t].key);return e}static link(e,t,s){e&&t&&e.push(t.call.bind(t),s)}}class U extends R{call(e){for(let t=0,s=this._callbacks.entries.length;t<s;t++)this._callbacks.entries[t].value(e)}push(e,t){return super.push(e,t)}}class X{constructor(){this.onCommandRecieved=new U}get commandFactory(){return this._commandFactory}set commandFactory(e){this._commandFactory=e}recieveCommand(e){this.onCommandRecieved.call(e)}}class Y{create(e,t,s){this._gameModel=s}update(e,t){let s=this._gameModel.stateActionMapping(e);if(s.length>0){let e=Math.round(Math.random()*s.length-1);return t.getCommand(s[e])}return null}scenarioEnded(e){}}s.d(t,"Command",(function(){return r})),s.d(t,"GameModel",(function(){return a})),s.d(t,"LocalPlayServer",(function(){return P})),s.d(t,"NodeServer",(function(){return d})),s.d(t,"Scenario",(function(){return m})),s.d(t,"AIClientConnection",(function(){return h})),s.d(t,"ClientConnection",(function(){return l})),s.d(t,"ClientController",(function(){return f})),s.d(t,"LocalServerConnection",(function(){return X})),s.d(t,"RandomAIClient",(function(){return Y})),s.d(t,"FPScenario",(function(){return x})),s.d(t,"FBScenario",(function(){return z})),t.default=class{createFusebladeScenario(e){return new z(e)}createFarmerPuzzleScenario(){return new x}}}])},"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("GamesAIScenarioFactory",[],t):"object"==typeof exports?exports.GamesAIScenarioFactory=t():e.GamesAIScenarioFactory=t();